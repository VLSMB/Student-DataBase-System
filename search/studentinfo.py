# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'studentinfo.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sql


class Ui_studentinfoWindow(QtWidgets.QMainWindow):
    def reload(self):
        """过滤条件"""
        condition = self.editKey.text()
        for x in range(len(self.studentdb)):
            # 让所有行都显示
            self.tbStudent.showRow(x)
        if condition == "":
            return None
        if self.cboxCondition.currentIndex() == 0:
            # 按编号查找
            for x in range(len(self.studentdb)):
                if condition not in self.tbStudent.item(x, 0).text():
                    self.tbStudent.hideRow(x)
        elif self.cboxCondition.currentIndex() == 1:
            for x in range(len(self.studentdb)):
                if condition not in self.tbStudent.item(x, 1).text():
                    self.tbStudent.hideRow(x)

    def initialization(self):
        """初始化"""
        classtup = sql.getclass()
        classID, className = [], []
        for x, y, z in classtup:
            classID.append(x)
            className.append(z)
        classdict = dict(zip(classID, className))
        studentdb = sql.getstudent()
        self.studentdb = studentdb
        self.tbStudent.setRowCount(len(studentdb))
        for i in range(len(studentdb)):
            # i为行数
            for j in range(len(studentdb[i])):
                if  j < 3:
                # j为列数
                    self.tbStudent.setItem(i, j, QtWidgets.QTableWidgetItem(str(studentdb[i][j])))
                    if j == 2:
                        self.tbStudent.setItem(i, j, QtWidgets.QTableWidgetItem(className[classID.index(studentdb[i][j])]))
                elif j > 3:
                    self.tbStudent.setItem(i, j-1, QtWidgets.QTableWidgetItem(str(studentdb[i][j])))
        self.tbStudent.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
    def setupUi(self, studentinfoWindow):
        studentinfoWindow.setObjectName("studentinfoWindow")
        studentinfoWindow.resize(705, 343)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/ico/images/appstu.ICO"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        studentinfoWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(studentinfoWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(185, 8, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.cboxCondition = QtWidgets.QComboBox(self.centralwidget)
        self.cboxCondition.setGeometry(QtCore.QRect(288, 8, 81, 22))
        self.cboxCondition.setObjectName("cboxCondition")
        self.cboxCondition.addItem("")
        self.cboxCondition.addItem("")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(389, 8, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.btnExit = QtWidgets.QPushButton(self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(649, 3, 51, 31))
        self.btnExit.setObjectName("btnExit")
        self.btnQuery = QtWidgets.QPushButton(self.centralwidget)
        self.btnQuery.setGeometry(QtCore.QRect(590, 3, 51, 31))
        self.btnQuery.setObjectName("btnQuery")
        self.tbStudent = QtWidgets.QTableWidget(self.centralwidget)
        self.tbStudent.setGeometry(QtCore.QRect(0, 40, 701, 301))
        self.tbStudent.setObjectName("tbStudent")
        self.tbStudent.setColumnCount(7)
        self.tbStudent.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbStudent.setHorizontalHeaderItem(6, item)
        self.editKey = QtWidgets.QLineEdit(self.centralwidget)
        self.editKey.setGeometry(QtCore.QRect(509, 9, 71, 20))
        self.editKey.setObjectName("editKey")
        studentinfoWindow.setCentralWidget(self.centralwidget)
        self.initialization()

        self.retranslateUi(studentinfoWindow)
        self.btnExit.clicked.connect(studentinfoWindow.close)
        self.btnQuery.clicked.connect(self.reload)
        self.editKey.returnPressed.connect(self.btnQuery.click)
        QtCore.QMetaObject.connectSlotsByName(studentinfoWindow)

    def retranslateUi(self, studentinfoWindow):
        _translate = QtCore.QCoreApplication.translate
        studentinfoWindow.setWindowTitle(_translate("studentinfoWindow", "学生信息查询"))
        self.label_2.setText(_translate("studentinfoWindow", "选择查询列表："))
        self.cboxCondition.setItemText(0, _translate("studentinfoWindow", "学生编号"))
        self.cboxCondition.setItemText(1, _translate("studentinfoWindow", "学生姓名"))
        self.label_3.setText(_translate("studentinfoWindow", "输入查询关键字："))
        self.btnExit.setText(_translate("studentinfoWindow", "退出"))
        self.btnQuery.setText(_translate("studentinfoWindow", "查询"))
        item = self.tbStudent.horizontalHeaderItem(0)
        item.setText(_translate("studentinfoWindow", "学生编号"))
        item = self.tbStudent.horizontalHeaderItem(1)
        item.setText(_translate("studentinfoWindow", "学生姓名"))
        item = self.tbStudent.horizontalHeaderItem(2)
        item.setText(_translate("studentinfoWindow", "班级"))
        item = self.tbStudent.horizontalHeaderItem(3)
        item.setText(_translate("studentinfoWindow", "性别"))
        item = self.tbStudent.horizontalHeaderItem(4)
        item.setText(_translate("studentinfoWindow", "年龄"))
        item = self.tbStudent.horizontalHeaderItem(5)
        item.setText(_translate("studentinfoWindow", "家庭地址"))
        item = self.tbStudent.horizontalHeaderItem(6)
        item.setText(_translate("studentinfoWindow", "联系电话"))
import rc_rc
