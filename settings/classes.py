# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'classes.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sql


class Ui_classes(QtWidgets.QMainWindow):
    def reload(self):
        grade = sql.getgrade()
        self.gradeIDALL, self.gradeName = [], []
        for ID, Name in grade.items():
            self.gradeIDALL.append(ID)
            self.gradeName.append(Name)
        self.cboxGrade.clear()
        self.cboxGrade.addItems(self.gradeName)
        self.cboxGrade.setCurrentIndex(0)
        classdb = sql.getclass()
        self.tbClass.setRowCount(len(classdb))
        i = 0
        for classID, gradeID, className in classdb:
            self.tbClass.setItem(i, 0, QtWidgets.QTableWidgetItem(str(classID)))
            self.tbClass.setItem(i, 1, QtWidgets.QTableWidgetItem(str(gradeID)))
            self.tbClass.setItem(i, 2, QtWidgets.QTableWidgetItem(className))
            i += 1
        self.tbClass.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
    def ADD(self):
        """插入班级"""
        if self.editID.text() == "" or self.editName.text() == "":
            QtWidgets.QMessageBox.warning(self, "提示", "请输入正确的ID和名称！")
        else:
            flag = sql.addclass(self.editID.text(), self.gradeIDALL[self.cboxGrade.currentIndex()], self.editName.text())
            if flag:
                QtWidgets.QMessageBox.information(self, "提示", "新班级增加成功！")
                self.reload()
            else:
                QtWidgets.QMessageBox.critical(self, "提示", "增加失败！")
    def DELETE(self):
        if self.tbClass.currentRow() == -1:
            QtWidgets.QMessageBox.warning(self, "提示", "没有选择要删除的项目！")
            return None
        id = self.tbClass.item(self.tbClass.currentRow(), 0).text()
        confirm = QtWidgets.QMessageBox.question(self, "提示", f"是否要删除班级ID {id} ？")
        if confirm == QtWidgets.QMessageBox.Yes:
            flag = sql.delteclass(id)
            if flag:
                QtWidgets.QMessageBox.information(self, "提示", "删除班级成功！")
                self.reload()
            else:
                QtWidgets.QMessageBox.critical(self, "提示", "删除失败！")
    def EDIT(self):
        if self.tbClass.currentColumn() == 0:
            text, flag = QtWidgets.QInputDialog.getInt(self, "修改班级ID", "请输入修改后的班级ID：", int(self.tbClass.currentItem().text()), 0, 100, 1)
            if flag and text != "":
                sqlflag = sql.editclass(0, text, self.tbClass.item(self.tbClass.currentRow(), 1).text(), self.tbClass.item(self.tbClass.currentRow(), 2).text())
                if sqlflag:
                    QtWidgets.QMessageBox.information(self, "提示", "修改成功！")
                    self.reload()
                else:
                    QtWidgets.QMessageBox.critical(self, "提示", "修改失败！非法输入！")
            else:
                QtWidgets.QMessageBox.critical(self, "提示", "修改失败！请输入非空字符串！")
        elif self.tbClass.currentColumn() == 1:
            text, flag = QtWidgets.QInputDialog.getInt(self, "修改年级ID", "请输入修改之后的年级ID：", int(self.tbClass.currentItem().text()), 0, 100, 1)
            if flag and text != "":
                sqlflag = sql.editclass(1, self.tbClass.item(self.tbClass.currentRow(), 0).text(), text, self.tbClass.item(self.tbClass.currentRow(), 2).text())
                if sqlflag:
                    QtWidgets.QMessageBox.information(self, "提示", "修改成功！")
                    self.reload()
                else:
                    QtWidgets.QMessageBox.critical(self, "提示", "修改失败！非法输入！")
            else:
                QtWidgets.QMessageBox.critical(self, "提示", "修改失败！请输入非空字符串！")
        elif self.tbClass.currentColumn() == 2:
            text, flag = QtWidgets.QInputDialog.getText(self, "修改名称", "请输入修改之后的名称：", QtWidgets.QLineEdit.Normal, self.tbClass.currentItem().text())
            if flag and text != "":
                sqlflag = sql.editclass(2, self.tbClass.item(self.tbClass.currentRow(), 0).text(), self.tbClass.item(self.tbClass.currentRow(), 1).text(), text)
                if sqlflag:
                    QtWidgets.QMessageBox.information(self, "提示", "修改成功！")
                    self.reload()
                else:
                    QtWidgets.QMessageBox.critical(self, "提示", "修改失败！非法输入！")
            else:
                QtWidgets.QMessageBox.critical(self, "提示", "修改失败！请输入非空字符串！")


    def setupUi(self, classes):
        classes.setObjectName("classes")
        classes.resize(307, 267)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/ico/images/appstu.ICO"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        classes.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(classes)
        self.centralwidget.setObjectName("centralwidget")
        self.editName = QtWidgets.QLineEdit(self.centralwidget)
        self.editName.setGeometry(QtCore.QRect(233, 200, 71, 20))
        self.editName.setObjectName("editName")
        self.btnExit = QtWidgets.QPushButton(self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(252, 231, 51, 31))
        self.btnExit.setObjectName("btnExit")
        self.btnEdit = QtWidgets.QPushButton(self.centralwidget)
        self.btnEdit.setGeometry(QtCore.QRect(132, 231, 51, 31))
        self.btnEdit.setObjectName("btnEdit")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(160, 200, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(7, 170, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.btnAdd = QtWidgets.QPushButton(self.centralwidget)
        self.btnAdd.setGeometry(QtCore.QRect(72, 231, 51, 31))
        self.btnAdd.setObjectName("btnAdd")
        self.btnDel = QtWidgets.QPushButton(self.centralwidget)
        self.btnDel.setGeometry(QtCore.QRect(192, 231, 51, 31))
        self.btnDel.setObjectName("btnDel")
        self.tbClass = QtWidgets.QTableWidget(self.centralwidget)
        self.tbClass.setGeometry(QtCore.QRect(3, 0, 301, 161))
        self.tbClass.setObjectName("tbClass")
        self.tbClass.setColumnCount(3)
        self.tbClass.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tbClass.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbClass.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbClass.setHorizontalHeaderItem(2, item)
        self.editID = QtWidgets.QLineEdit(self.centralwidget)
        self.editID.setGeometry(QtCore.QRect(80, 200, 71, 20))
        self.editID.setObjectName("editID")
        self.cboxGrade = QtWidgets.QComboBox(self.centralwidget)
        self.cboxGrade.setGeometry(QtCore.QRect(80, 170, 69, 22))
        self.cboxGrade.setObjectName("cboxGrade")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(6, 200, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        classes.setCentralWidget(self.centralwidget)
        self.reload()

        self.retranslateUi(classes)
        self.btnExit.clicked.connect(classes.close)
        self.btnAdd.clicked.connect(self.ADD)
        self.btnDel.clicked.connect(self.DELETE)
        self.btnEdit.clicked.connect(self.EDIT)
        QtCore.QMetaObject.connectSlotsByName(classes)

    def retranslateUi(self, classes):
        _translate = QtCore.QCoreApplication.translate
        classes.setWindowTitle(_translate("classes", "班级设置"))
        self.btnExit.setText(_translate("classes", "退出"))
        self.btnEdit.setText(_translate("classes", "修改"))
        self.label_3.setText(_translate("classes", "班级名称："))
        self.label_2.setText(_translate("classes", "选择年级："))
        self.btnAdd.setText(_translate("classes", "添加"))
        self.btnDel.setText(_translate("classes", "删除"))
        item = self.tbClass.horizontalHeaderItem(0)
        item.setText(_translate("classes", "班级编号"))
        item = self.tbClass.horizontalHeaderItem(1)
        item.setText(_translate("classes", "年级编号"))
        item = self.tbClass.horizontalHeaderItem(2)
        item.setText(_translate("classes", "班级名称"))
        self.label_4.setText(_translate("classes", "班级编号："))
import rc_rc
